#NEXUS 

Begin trees;  [Treefile saved Wed Mar 15 19:27:51 2023]
[!
>Data file = ds8.nex
>Heuristic search settings:
>  Optimality criterion = parsimony
>    Character-status summary:
>      Of 1008 total characters:
>        All characters are of type 'unord'
>        All characters have equal weight
>        640 characters are constant (proportion = 0.634921)
>        101 variable characters are parsimony-uninformative
>        Number of parsimony-informative characters = 267
>    Gaps are treated as "fifth base"
>    Multistate taxa interpreted as uncertainty
>  Starting tree(s) obtained via stepwise addition
>    Addition sequence: random
>    Number of replicates = 10
>    Starting seed = generated automatically
>    Number of trees held at each step = 100
>  Branch-swapping algorithm: tree-bisection-reconnection (TBR) with reconnection limit = 8
>    Steepest descent option not in effect
>  Initial 'Maxtrees' setting = 100
>  Branches collapsed (creating polytomies) if maximum branch length is zero
>  'MulTrees' option in effect
>  No topological constraints in effect
>  Trees are unrooted
>
>Heuristic search completed
>  Total number of rearrangements tried = 8113732
>  Score of best tree(s) found = 1461
>  Number of trees retained = 21
>  Time used = 24.31 sec (CPU time = 18.59 sec)
]
	Translate
		1 taxon0,
		2 taxon1,
		3 taxon2,
		4 taxon3,
		5 taxon4,
		6 taxon5,
		7 taxon6,
		8 taxon7,
		9 taxon8,
		10 taxon9,
		11 taxon10,
		12 taxon11,
		13 taxon12,
		14 taxon13,
		15 taxon14,
		16 taxon15,
		17 taxon16,
		18 taxon17,
		19 taxon18,
		20 taxon19,
		21 taxon20,
		22 taxon21,
		23 taxon22,
		24 taxon23,
		25 taxon24,
		26 taxon25,
		27 taxon26,
		28 taxon27,
		29 taxon28,
		30 taxon29,
		31 taxon30,
		32 taxon31,
		33 taxon32,
		34 taxon33,
		35 taxon34,
		36 taxon35,
		37 taxon36,
		38 taxon37,
		39 taxon38,
		40 taxon39,
		41 taxon40,
		42 taxon41,
		43 taxon42,
		44 taxon43,
		45 taxon44,
		46 taxon45,
		47 taxon46,
		48 taxon47,
		49 taxon48,
		50 taxon49,
		51 taxon50,
		52 taxon51,
		53 taxon52,
		54 taxon53,
		55 taxon54,
		56 taxon55,
		57 taxon56,
		58 taxon57,
		59 taxon58,
		60 taxon59,
		61 taxon60,
		62 taxon61,
		63 taxon62,
		64 taxon63
		;
tree 'PAUP_1' = [&U] (1,(((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(((((((4,(5,(6,10))),41),46),(42,43)),49),((((20,(25,(26,(48,56)))),47),57),(((21,23),22),24))),(52,53))),(((((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36),((7,(19,51)),((17,18),37))),(60,61)),15));
tree 'PAUP_2' = [&U] (1,(((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(((((((4,(5,(6,10))),41),46),(42,43)),49),((((20,(25,(26,(48,56)))),57),47),(((21,23),22),24))),(52,53))),(((((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36),((7,(19,51)),((17,18),37))),(60,61)),15));
tree 'PAUP_3' = [&U] (1,(((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(((((((4,(5,(6,10))),41),46),(42,43)),49),((((20,(25,(26,(48,56)))),47),57),(((21,23),22),24))),(52,53))),(((((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36),(((7,(19,51)),37),(17,18))),(60,61)),15));
tree 'PAUP_4' = [&U] (1,(((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(((((((4,(5,(6,10))),41),46),(42,43)),49),((((20,(25,(26,(48,56)))),47),57),(((21,23),22),24))),(52,53))),(((((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36),(((7,(19,51)),(17,18)),37)),(60,61)),15));
tree 'PAUP_5' = [&U] (1,(((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(((((((4,(5,(6,10))),41),46),(42,43)),49),((((20,(25,(26,(48,56)))),47),57),(((21,23),22),24))),(52,53))),(((((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36),(7,(((17,18),37),(19,51)))),(60,61)),15));
tree 'PAUP_6' = [&U] (1,(((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(((((((4,(5,(6,10))),41),46),(42,43)),49),((((20,(25,(26,(48,56)))),47),57),(((21,23),22),24))),(52,53))),(((((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36),((7,((17,18),37)),(19,51))),(60,61)),15));
tree 'PAUP_7' = [&U] (1,(((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),((((((4,(5,(6,10))),41),46),((42,43),49)),((((20,(25,(26,(48,56)))),57),47),(((21,23),22),24))),(52,53))),(((((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36),((7,(19,51)),((17,18),37))),(60,61)),15));
tree 'PAUP_8' = [&U] (1,(((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(((((((4,(5,(6,10))),41),46),(42,43)),49),((((20,(25,(26,(48,56)))),57),47),(((21,23),22),24))),(52,53))),(((((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36),(((7,(19,51)),37),(17,18))),(60,61)),15));
tree 'PAUP_9' = [&U] (1,(((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(((((((4,(5,(6,10))),41),46),(42,43)),49),((((20,(25,(26,(48,56)))),57),47),(((21,23),22),24))),(52,53))),(((((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36),(((7,(19,51)),(17,18)),37)),(60,61)),15));
tree 'PAUP_10' = [&U] (1,(((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(((((((4,(5,(6,10))),41),46),(42,43)),49),((((20,(25,(26,(48,56)))),57),47),(((21,23),22),24))),(52,53))),(((((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36),(7,(((17,18),37),(19,51)))),(60,61)),15));
tree 'PAUP_11' = [&U] (1,(((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(((((((4,(5,(6,10))),41),46),(42,43)),49),((((20,(25,(26,(48,56)))),57),47),(((21,23),22),24))),(52,53))),(((((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36),((7,((17,18),37)),(19,51))),(60,61)),15));
tree 'PAUP_12' = [&U] (1,(((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),((((((4,(5,(6,10))),41),46),((42,43),49)),((((20,(25,(26,(48,56)))),57),47),(((21,23),22),24))),(52,53))),(((((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36),(((7,(19,51)),37),(17,18))),(60,61)),15));
tree 'PAUP_13' = [&U] (1,(((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),((((((4,(5,(6,10))),41),46),((42,43),49)),((((20,(25,(26,(48,56)))),57),47),(((21,23),22),24))),(52,53))),(((((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36),(((7,(19,51)),(17,18)),37)),(60,61)),15));
tree 'PAUP_14' = [&U] (1,(((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),((((((4,(5,(6,10))),41),46),((42,43),49)),((((20,(25,(26,(48,56)))),57),47),(((21,23),22),24))),(52,53))),(((((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36),(7,(((17,18),37),(19,51)))),(60,61)),15));
tree 'PAUP_15' = [&U] (1,(((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),((((((4,(5,(6,10))),41),46),((42,43),49)),((((20,(25,(26,(48,56)))),57),47),(((21,23),22),24))),(52,53))),(((((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36),((7,((17,18),37)),(19,51))),(60,61)),15));
tree 'PAUP_16' = [&U] (1,((((((((((((((((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(52,53)),(((((4,(5,(6,10))),41),46),(42,43)),49)),(((21,23),22),24)),47),57),20),25),26),56),48),((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36)),(15,(60,61))),37),(7,(19,51))),(17,18));
tree 'PAUP_17' = [&U] (1,(((((((((((((((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(52,53)),(((((4,(5,(6,10))),41),46),(42,43)),49)),(((21,23),22),24)),47),57),20),25),26),56),48),((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36)),(((7,(19,51)),(17,18)),37)),(60,61)),15);
tree 'PAUP_18' = [&U] (1,((((((((((((((((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(52,53)),(((((4,(5,(6,10))),41),46),(42,43)),49)),(((21,23),22),24)),57),47),20),25),26),56),48),((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36)),(15,(60,61))),37),(7,(19,51))),(17,18));
tree 'PAUP_19' = [&U] (1,((((((((((((((((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(52,53)),((((4,(5,(6,10))),41),46),((42,43),49))),(((21,23),22),24)),47),57),20),25),26),56),48),((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36)),(15,(60,61))),37),(7,(19,51))),(17,18));
tree 'PAUP_20' = [&U] (1,(((((((((((((((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(52,53)),(((((4,(5,(6,10))),41),46),(42,43)),49)),(((21,23),22),24)),57),47),20),25),26),56),48),((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36)),(((7,(19,51)),(17,18)),37)),(60,61)),15);
tree 'PAUP_21' = [&U] (1,(((((((((((((((((2,14),54),38),((((8,13),((35,((39,40),44)),45)),(63,64)),(9,(55,62)))),(52,53)),((((4,(5,(6,10))),41),46),((42,43),49))),(((21,23),22),24)),47),57),20),25),26),56),48),((((3,(11,(12,(16,50)))),((((27,29),(58,59)),(30,31)),28)),(32,(33,34))),36)),(((7,(19,51)),(17,18)),37)),(60,61)),15);
End;
